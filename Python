
#                                   Домашнее задание
# Задача 10: На столе лежат n монеток. Некоторые из них лежат вверх решкой, а некоторые – гербом.
# Определите минимальное число монеток, которые нужно перевернуть, чтобы все монетки были повернуты вверх 
# одной и той же стороной. Выведите минимальное количество монет, которые нужно перевернуть.
# 5 -> 1 0 1 1 0
# 2

from random import randint
def flipCoin():
    print ('СЕМИНАР 2, ДЗ => задача № 10')
    countN = int(input("Введите число монеток: "))
    tails = 0
    emblem = 0
    count = 0
    for i in range(countN):
        x = randint(0, 1)
        if x == 0:
            emblem += 1
        else:
            tails += 1
        print(x, end=' ')
        if emblem >= tails:
            count = countN - emblem
        else:
            count = countN - tails
    print('\nМинимальное количество монет, которые нужно перевернуть:', count)

flipCoin()


# Задача 12: Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. Петя помогает Кате по математике. 
# Он задумывает два натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать. Для этого Петя делает 
# две подсказки. Он называет сумму этих чисел S и их произведение P. Помогите Кате отгадать задуманные Петей числа.
# 4 4 -> 2 2
# 5 6 -> 2 3

# method 1
def guessNumbers1(s, p):
    print ('СЕМИНАР 2, ДЗ => задача № 12 (метод № 1)')
    x = 0
    y = 0
    flag = 0
    for x in range(1000):
        if flag != 1:
            for y in range(1000):
                if s == x + y and p == x * y:
                    flag = flag + 1
                    if flag == 1:
                        print(f'number1 = {x}, number2 = {y}')

guessNumbers1(s = 5, p = 6)

# method 2
def guessNumbers2(s, p):
    print ('СЕМИНАР 2, ДЗ => задача № 12 (метод № 2)')
    x = int((s + ((-s) ** 2 - 4 * p) ** 0.5) / 2)
    y = int((s - ((-s) ** 2 - 4 * p) ** 0.5) / 2)
    return(f'number1 = {x}, number2 = {y}')

print(guessNumbers2(s = 5, p = 6))

# Задача 14: Требуется вывести все целые степени двойки (т.е. числа вида 2 k), не превосходящие числа N.
# 10 -> 1 2 4 8

def integerPowersTwo(n):
    print ('СЕМИНАР 2, ДЗ => задача № 14')
    k = 1
    for i in range(n):
        if i >= k:
            print(f'{k}')
            k = k * 2

integerPowersTwo(int(input("Введите число : ")))
